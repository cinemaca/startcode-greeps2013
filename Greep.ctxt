#BlueJ class context
comment0.params=
comment0.target=Greep()
comment0.text=\n\ Default\ constructor\ for\ testing\ purposes.\n
comment1.params=ship
comment1.target=Greep(Ship)
comment1.text=\n\ Create\ a\ Greep\ with\ its\ home\ space\ ship.\n
comment10.params=
comment10.target=void\ breadcrumb()
comment10.text=\n\ leaves\ the\ paint\ trail\n
comment11.params=
comment11.target=boolean\ checkBreadcrumb()
comment11.text=\n\ checks\ the\ paint\ trail\n
comment12.params=
comment12.target=boolean\ followBreadcrumb()
comment12.text=\n\ follows\ the\ paint\ trail\n
comment13.params=
comment13.target=void\ bounceOffBreadcrumb()
comment13.text=\n\ stay\ off\ other\ greeps'\ paint\ trail\n
comment14.params=step
comment14.target=void\ loopCounter(int)
comment14.text=\n\ sets\ the\ memory\ to\ one\ less\ than\ previous\n
comment15.params=
comment15.target=void\ redirect()
comment15.text=\n\ goes\ right\ or\ left\n
comment16.params=
comment16.target=void\ turnaround()
comment16.text=\n\ turn\ around\n
comment17.params=
comment17.target=void\ turnAwayShip()
comment17.text=\n\ turn\ around\n
comment18.params=neg
comment18.target=void\ changeDirection(boolean)
comment19.params=
comment19.target=void\ resetBrain()
comment19.text=\n\ sets\ the\ greeps\ memory\ back\ to\ "nothing"\n\ @author\ Russell\ Fair\n\ @since\ 0.1\n
comment2.params=
comment2.target=boolean\ hasBouncedBack()
comment2.text=\n\ Determines\ if\ the\ greep\ has\ previously\ bounced\ back\n\ @author\ Russell\ Fair\n\ @since\ 0.3\n
comment20.params=
comment20.target=void\ setBrain()
comment20.text=\n\ sets\ the\ greeps\ initial\ memory\ to\ "nothing"\n\ @author\ Russell\ Fair\n\ @since\ 0.1\n
comment21.params=
comment21.target=void\ goRight()
comment21.text=\n\ go\ around\ something,\ to\ the\ right\n\ @author\ Russell\ Fair\n\ @since\ 0.2\n
comment22.params=
comment22.target=void\ goLeft()
comment22.text=\n\ go\ around\ something,\ to\ the\ left\n\ @author\ Russell\ Fair\n\ @since\ 0.2\n
comment23.params=
comment23.target=boolean\ atFoodPile()
comment23.text=\ checks\ if\ greep\ is\ loitering\ at\ a\ food\ pile\n\ @author\ Russell\ Fair\n\ @since\ 0.1\n
comment24.params=
comment24.target=boolean\ pileEmpty()
comment24.text=\ checks\ if\ the\ pile\ is\ finished\n\ @author\ Russell\ Fair\n\ @since\ 0.1\n
comment25.params=
comment25.target=void\ checkFood()
comment25.text=\n\ Is\ there\ any\ food\ here\ where\ we\ are?\ If\ so,\ try\ to\ load\ some\!\n
comment26.params=
comment26.target=void\ giveTomato()
comment26.text=\n\ Load\ a\ tomato\ onto\ *another*\ creature.\ This\ works\ only\ if\ there\ is\ another\ creature\n\ and\ a\ tomato\ pile\ present,\ otherwise\ this\ method\ does\ nothing.\n
comment27.params=
comment27.target=void\ bounceBack()
comment27.text=\n\ turn\ around\ silly\ greep\n\ @author\ Russell\ Fair\n\ @since\ 0.2\n
comment28.params=
comment28.target=void\ bounce()
comment28.text=\n\ go\ away\ silly\ greep\n\ @author\ Russell\ Fair\n\ @since\ 0.2\n
comment29.params=
comment29.target=java.lang.String\ getAuthorName()
comment29.text=\n\ This\ method\ specifies\ the\ name\ of\ the\ author\ (for\ display\ on\ the\ result\ board).\n
comment3.params=
comment3.target=boolean\ isBackwardFacing()
comment3.text=\n\ Determines\ if\ the\ greep\ has\ previously\ bounced\ back\n\ @author\ Russell\ Fair\n\ @since\ 0.3\n
comment30.params=
comment30.target=java.lang.String\ getCurrentImage()
comment30.text=\n\ This\ method\ specifies\ the\ image\ we\ want\ displayed\ at\ any\ time.\ (No\ need\ \n\ to\ change\ this\ for\ the\ competition.)\n
comment4.params=
comment4.target=void\ setBounced()
comment4.text=\n\ sets\ the\ "has\ bounced"\ flag\n\ @author\ Russell\ Fair\n\ @since\ 0.3\n
comment5.params=
comment5.target=void\ setBackwards()
comment5.text=\nsets\ the\ "is\ backwards"\ flag\n\ @author\ Russell\ Fair\n\ @since\ 0.3\n
comment6.params=
comment6.target=void\ unsetBackwards()
comment6.text=\nunsets\ the\ "is\ backwards"\ flag\n\ @author\ Russell\ Fair\n\ @since\ 0.3\n
comment7.params=
comment7.target=void\ act()
comment7.text=\n\ Do\ what\ a\ greep's\ gotta\ do.\n\ @author\ Russell\ Fair\n\ @since\ 0.1\n
comment8.params=
comment8.target=void\ doSearch()
comment8.text=\n\ the\ new\ method\ for\ searching\n\ @author\ Russell\ Fair\n\ @since\ 0.5\n
comment9.params=
comment9.target=void\ doDelivery()
comment9.text=\n\ the\ new\ method\ for\ delivering\n\ @author\ Russell\ Fair\n\ @since\ 0.5\n
numComments=31
